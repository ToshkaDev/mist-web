.row
  .five.columns
    mat-form-field
      mat-select([(value)]="selectedComponent" (change)="entityChanged($event)")
        mat-option(value="genomes") Genomes
        mat-option(value="genes") Genes / Proteins
    mist-search-input(
      [query]="query$ | async"
      [scope]="scopeName$ | async"
      [isFetching]="isFetching$ | async"
      [isFetchingScope]="isFetchingScope$ | async"
      (onQueryChange)="putQuery($event)"
      (onScopeChange)="putScope($event)"
      [selectedComponent]="selectedComponent"
      [scopeIdentifier]="scope"
    )

    p Examples:&nbsp;
      span.example(*ngFor="let example of examples; last as isLast")
        a(routerLink="{{ example.link }}" (click)="putQuery(example.queryString)") {{ example.queryString }}
        span(*ngIf="!isLast") {{ "; " }}

  .three.columns
    .db-switcher
      .db-switcher-lable([ngStyle]="dbNameColor['mist']") Genomes
      .toggle-element
        mat-slide-toggle.db-toggle((change)="mistSwitchDatabaseClicked($event)" [checked]="databaseChecked") 
      .db-switcher-lable([ngStyle]="dbNameColor['mist-metagenomes']") Metagenomes

  .four.columns.pull-right
    mat-icon.cart-icon
      a.non-decor-green(routerLink="/{{database}}/shop-cart") shopping_cart
    div.cart-details
      div {{ genesInCart }}
      div {{ genomesInCart }}

.row(*ngIf="isScope")
  mist-progress-spinner(
    [isSearchPerformed]="isSearchPerformed$ | async"
    [isFetching]="isFetchingScope$ | async"
    [errorMessage]="errorMessage$ | async"
    [result]="resultScope$ | async"
  )
  mist-genes-scope

mist-progress-spinner(
  [isSearchPerformed]="isSearchPerformed$ | async"
  [isFetching]="isFetching$ | async"
  [errorMessage]="errorMessage$ | async"
  [result]="result$ | async"
)
